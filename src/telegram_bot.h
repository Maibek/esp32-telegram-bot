#pragma once
#include <UniversalTelegramBot.h>

#include "wifi_connect.h"
#include "token_bot.h"
#include "read_sensor.h"
#include "config.h"

WiFiClientSecure client;
UniversalTelegramBot bot(TOKEN_BOT, client);

void sendMainMenu(String chat_id) {
    // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
    String keyboardJson = R"([
        [{"text": "üêú –î–∞–Ω–Ω—ã–µ Structor", "callback_data": "/meteo_structor"}],
        [{"text": "üêú –î–∞–Ω–Ω—ã–µ Nicobarensis", "callback_data": "/meteo_nicobarensis"}],
        [{"text": "‚òÄÔ∏è –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥–æ–≥—Ä–µ–≤", "callback_data": "/relay_on"}, {"text": "‚ùÑÔ∏è –í—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥–æ–≥—Ä–µ–≤", "callback_data": "/relay_off"}],
        [{"text": "üí° –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É", "callback_data": "/light_on"}, {"text": "üèÆ –í—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É", "callback_data": "/light_off"}],
        [{"text": "‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã", "callback_data": "/status"}, {"text": "üîÑ –û–±–Ω–æ–≤–∏—Ç—å", "callback_data": "/update"}]
        ])";
  
    bot.sendMessageWithInlineKeyboard(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", "", keyboardJson);
}

void sendStatus(String chat_id) {
    static String status_relay0 = "";
    static String status_relay1 = "";
    static String status_light0 = "";
    static String status_light1 = "";
    if (digitalRead(RELAY0_PIN) == LOW){
        status_relay0 = "–≤–∫–ª—é—á–µ–Ω";
    }
    if (digitalRead(RELAY0_PIN) == HIGH){
        status_relay0 = "–≤—ã–∫–ª—é—á–µ–Ω";
    }
    if (digitalRead(RELAY1_PIN) == LOW){
        status_relay1 = "–≤–∫–ª—é—á–µ–Ω";
    }
    if (digitalRead(RELAY1_PIN) == HIGH){
        status_relay1 = "–≤—ã–∫–ª—é—á–µ–Ω";
    }
    if (digitalRead(LIGHT0_PIN) == LOW){
        status_light0 = "–≤–∫–ª—é—á–µ–Ω–æ";
    }
    if (digitalRead(LIGHT0_PIN) == HIGH){
        status_light0 = "–≤—ã–∫–ª—é—á–µ–Ω–æ";
    }
    if (digitalRead(LIGHT1_PIN) == LOW){
        status_light1 = "–≤–∫–ª—é—á–µ–Ω–æ";
    }
    if (digitalRead(LIGHT1_PIN) == HIGH){
        status_light1 = "–≤—ã–∫–ª—é—á–µ–Ω–æ";
    }
    String status = "üñ•Ô∏è *–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã*\n";
    status += "üì∂ –°–∏–≥–Ω–∞–ª: " + String(WiFi.RSSI()) + " dBm\n";
    status += "üíΩ –ü–∞–º—è—Ç—å: " + String(ESP.getFreeHeap() / 1024.0, 1) + " KB —Å–≤–æ–±–æ–¥–Ω–æ\n";
    status += "üïí –ê–ø—Ç–∞–π–º: " + String(millis() / 1000 / 60) + " –º–∏–Ω—É—Ç\n";
    status += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —è–¥—Ä–∞: " + String((temprature_sens_read() - 32) / 1.8f) + " ¬∞C\n";
    status += "üî• *–°—Ç–∞—Ç—É—Å –ø–æ–¥–æ–≥—Ä–µ–≤–∞: *\n";
    status += "‚òÄÔ∏è –ü–æ–¥–æ–≥—Ä–µ–≤ —É " + sensor_0 + " " + status_relay0 + "!\n";
    status += "‚òÄÔ∏è –ü–æ–¥–æ–≥—Ä–µ–≤ —É " + sensor_1 + " " +  status_relay1 + "!\n";
    status += "üí° *–°—Ç–∞—Ç—É—Å –æ—Å–≤–µ—â–µ–Ω–∏—è: *\n";
    status += "üåü –û—Å–≤–µ—â–µ–Ω–∏–µ —É " + sensor_0 + " " +  status_light0 + "!\n";
    status += "üåü –û—Å–≤–µ—â–µ–Ω–∏–µ —É " + sensor_1 + " " +  status_light1 + "!\n";    
    bot.sendMessage(chat_id, status, "Markdown");
}


void handleNewMessages(int numNewMessages) {
    for (int i = 0; i < numNewMessages; i++) {
        String chat_id = String(bot.messages[i].chat_id);
        String text = bot.messages[i].text;
        String from_name = bot.messages[i].from_name;
        
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        Serial.print("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ");
        Serial.print(from_name);
        Serial.print(" (");
        Serial.print(chat_id);
        Serial.print("): ");
        Serial.println(text);

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
        if (text == "/start") {
            String welcome = "–ü—Ä–∏–≤–µ—Ç, " + from_name + "!\n";
            welcome += "–Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–∞.\n";
            welcome += "–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.";
            bot.sendMessage(chat_id, welcome);
            sendMainMenu(chat_id);
            continue;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ (–±–µ–∑ callback –ø—Ä–µ—Ñ–∏–∫—Å–∞)
        if (text.equalsIgnoreCase("/meteo_structor")) {
            String message = "üêú –ö–ª–∏–º–∞—Ç —É *" + sensor_0 + "!\n";      
            message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String(last_temp0, 2) + " ¬∞C\n";
            message += "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: " + String(last_hum0, 2) + " %";
            bot.sendMessage(chat_id, message, "Markdown");
        }
        else if (text.equalsIgnoreCase("/meteo_nicobarensis")) {
            String message = "üêú –ö–ª–∏–º–∞—Ç —É " + sensor_1 + "\n";      
            message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String(last_temp1, 2) + " ¬∞C\n";
            message += "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: " + String(last_hum1, 2) + " %";
            bot.sendMessage(chat_id, message, "Markdown");
        }
        else if (text.equalsIgnoreCase("/status")) {
            sendStatus(chat_id);
        }
        else if (text.equalsIgnoreCase("/update")) {
            bot.sendMessage(chat_id, "–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!");
            sendMainMenu(chat_id);
        }
        else if (text.equalsIgnoreCase("/help")) {
            sendMainMenu(chat_id);
        }
        else if (text.equalsIgnoreCase("/local_ip")){
            String message = "–õ–æ–∫–∞–ª—å–Ω—ã–π IP –∞–¥—Ä–µ—Å—Å: " + String(WiFi.localIP()) + "\n";
            bot.sendMessage(chat_id, message, "Markdown");
        }
        else if (text.equalsIgnoreCase("/relay_on")) {
            if (temp_high == false && last_temp0 < max_temp && last_temp1 < max_temp){ 
                digitalWrite(RELAY0_PIN, LOW);
                digitalWrite(RELAY1_PIN, LOW);
                String message = "üêú *–ü–æ–¥–æ–≥—Ä–µ–≤ —É –≤—Å–µ—Ö –º—É–∑–∞–≤—å–µ–≤ –≤–∫–ª—é—á–µ–Ω!*\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
                bot.sendMessage(chat_id, message, "Markdown");
                temp_high = true;
            }
            else if (last_temp0 >= max_temp){
                String message = "‚òÄÔ∏è *–£ structor –∏ —Ç–∞–∫ —Ç–µ–ø–ª–æ!*\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp0, 2) + " ¬∞C\n";
                bot.sendMessage(chat_id, message, "Markdown");
            }
            else if (last_temp1 >= max_temp){
                String message = "‚òÄÔ∏è *–£ nicobarensis –∏ —Ç–∞–∫ —Ç–µ–ø–ª–æ!*\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp0, 2) + " ¬∞C\n";
                bot.sendMessage(chat_id, message, "Markdown");
            }
            else if (temp_high = true){
                String message = "üîå *–ü–æ–¥–æ–≥—Ä–µ–≤ —É–∂–µ –≤–∫–ª—é—á–µ–Ω!*\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
                bot.sendMessage(chat_id, message, "Markdown");
            }
            else {
                String message = "‚ö†Ô∏è *–ü–æ–¥–æ–≥—Ä–µ–≤ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å!*\n";
                bot.sendMessage(chat_id, message, "Markdown");

            }
        }
        else if (text.equalsIgnoreCase("/relay_off")) {
            digitalWrite(RELAY0_PIN, HIGH);
            digitalWrite(RELAY1_PIN, HIGH);
            String message = "‚úÖ *–ü–æ–¥–æ–≥—Ä–µ–≤ —É –≤—Å–µ—Ö –º—É–∑–∞–≤—å–µ–≤ –≤—ã–∫–ª—é—á–µ–Ω!*\n";
            message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
            message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
            bot.sendMessage(chat_id, message, "Markdown");
            temp_high = false;
        }
        else if (text.equalsIgnoreCase("/light_on")) {
            if (light == false){
                digitalWrite(LIGHT0_PIN, LOW);
                digitalWrite(LIGHT1_PIN, LOW);
                String message = "üí° –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞\n";
                bot.sendMessage(chat_id, message, "Markdown");
                light = true;
            }
            else {
                String message = "üí° –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞\n";
                bot.sendMessage(chat_id, message, "Markdown");
            }
        }
        else if (text.equalsIgnoreCase("/light_off")) {
            if (light == true){                
                digitalWrite(LIGHT0_PIN, HIGH);
                digitalWrite(LIGHT1_PIN, HIGH);
                String message = "üèÆ –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞\n";
                bot.sendMessage(chat_id, message, "Markdown");
                light = false;
            }
            else {
                String message = "üèÆ –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω–∞\n";
                bot.sendMessage(chat_id, message, "Markdown");
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
        else if (text.startsWith("/cb")) {
            String command = text.substring(3); // –£–¥–∞–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å /cb
            command.trim();
        
            if (command.equalsIgnoreCase("/meteo_structor")) {
                String message = "üêú –ö–ª–∏–º–∞—Ç —É " + sensor_0 + "\n";      
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String(last_temp0, 2) + " ¬∞C\n";
                message += "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: " + String(last_hum0, 2) + " %";
                bot.sendMessage(chat_id, message, "Markdown");
            }
            else if (command.equalsIgnoreCase("/meteo_nicobarensis")) {
                String message = "üêú –ö–ª–∏–º–∞—Ç —É " + sensor_1 + "\n";      
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + String(last_temp1, 2) + " ¬∞C\n";
                message += "üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: " + String(last_hum1, 2) + " %";
                bot.sendMessage(chat_id, message, "Markdown");
            }
            else if (text.equalsIgnoreCase("/relay_on")) { 
                digitalWrite(RELAY0_PIN, LOW);
                digitalWrite(RELAY1_PIN, LOW);
                String message = "üêú *–ü–æ–¥–æ–≥—Ä–µ–≤ —É –≤—Å–µ—Ö –º—É–∑–∞–≤—å–µ–≤ –≤–∫–ª—é—á–µ–Ω!*\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
                bot.sendMessage(chat_id, message, "Markdown");
                temp_high = true;
            }
            else if (text.equalsIgnoreCase("/relay_off")) {
                digitalWrite(RELAY0_PIN, HIGH);
                digitalWrite(RELAY1_PIN, HIGH);
                String message = "‚úÖ *–ü–æ–¥–æ–≥—Ä–µ–≤ —É –≤—Å–µ—Ö –º—É–∑–∞–≤—å–µ–≤ –≤—ã–∫–ª—é—á–µ–Ω!*\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
                message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
                bot.sendMessage(chat_id, message, "Markdown");
                temp_high = false;
            }
            else if (text.equalsIgnoreCase("/light_on")) {
                if (light == false){
                    digitalWrite(LIGHT0_PIN, LOW);
                    digitalWrite(LIGHT1_PIN, LOW);
                    String message = "üí° –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞\n";
                    bot.sendMessage(chat_id, message, "Markdown");
                    light = true;
                }
                else {
                    String message = "üí° –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞\n";
                    bot.sendMessage(chat_id, message, "Markdown");
                }
            }
            else if (text.equalsIgnoreCase("/light_off")) {
                if (light == true){
                    digitalWrite(LIGHT0_PIN, HIGH);
                    digitalWrite(LIGHT1_PIN, HIGH);
                    String message = "üèÆ –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞\n";
                    bot.sendMessage(chat_id, message, "Markdown");
                    light = false;
                }
                else {
                    String message = "üèÆ –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω–∞\n";
                    bot.sendMessage(chat_id, message, "Markdown");
                }
            }
            else if (command.equalsIgnoreCase("/status")) {
                sendStatus(chat_id);
            }
            else if (command.equalsIgnoreCase("/update")) {
                bot.sendMessage(chat_id, "–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!");
                sendMainMenu(chat_id);
            }
        }
        else {
            // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
            String response = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: " + text + "\n";
            response += "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é";
            bot.sendMessage(chat_id, response);
        }
    }
}
void checkSensors(){
    static bool errorSent0 = false;
    static bool errorSent1 = false;
    if (isnan(last_temp0) || isnan(last_hum0)){
        if (!errorSent0){
            digitalWrite(RELAY0_PIN, HIGH);
            String message = "üîß –î–∞—Ç—á–∏–∫ —É " + sensor_0 + " –Ω–µ –∏—Å–ø—Ä–∞–≤–µ–Ω\n";
            bot.sendMessage(CHAT_ID, message, "Markdown");
            errorSent0 = true;
        }
    }
    else{
        errorSent0 = false;
    }

    if (isnan(last_temp1) || isnan(last_hum1)){ 
        if (!errorSent1){
            digitalWrite(RELAY1_PIN, HIGH);
            String message = "üîß –î–∞—Ç—á–∏–∫ —É " + sensor_1 + " –Ω–µ –∏—Å–ø—Ä–∞–≤–µ–Ω\n";
            bot.sendMessage(CHAT_ID, message, "Markdown");
            errorSent1 = true;
        }
    }
    else {
        errorSent1 = false;
    }
    if (digitalRead(RELAY0_PIN) == HIGH && last_temp0 < min_temp){
        digitalWrite(RELAY0_PIN, LOW);
        String message = "‚úÖ –ü–æ–¥–æ–≥—Ä–µ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–µ–Ω —É " + sensor_0 + "\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
        bot.sendMessage(CHAT_ID, message, "Markdown");
    }
    if (digitalRead(RELAY1_PIN) == HIGH && last_temp1 < min_temp){
        digitalWrite(RELAY1_PIN, LOW);
        String message = "‚úÖ –ü–æ–¥–æ–≥—Ä–µ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–µ–Ω —É " + sensor_1 + "\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
        bot.sendMessage(CHAT_ID, message, "Markdown");
    }
    if (temp_high == true && (last_temp0 >= max_temp && last_temp1 >= max_temp)){
        digitalWrite(RELAY0_PIN, HIGH);
        digitalWrite(RELAY1_PIN, HIGH);
        String message = "‚ùå *–ü–æ–¥–æ–≥—Ä–µ–≤ –æ—Ç–∫–ª—é—á–µ–Ω –ø–æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã!*\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
        bot.sendMessage(CHAT_ID, message, "Markdown");
        temp_high = false;
    }
    else if (digitalRead(RELAY0_PIN) == LOW && last_temp0 >= max_temp){
        digitalWrite(RELAY0_PIN, HIGH);
        String message = "‚ùå *–ü–æ–¥–æ–≥—Ä–µ–≤ –æ—Ç–∫–ª—é—á–µ–Ω —É " + sensor_0 + " –ø–æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã!*\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
        bot.sendMessage(CHAT_ID, message, "Markdown");
    }
    else if (digitalRead(RELAY1_PIN) == LOW && last_temp1 >= max_temp){
        digitalWrite(RELAY1_PIN, HIGH);
        String message = "‚ùå *–ü–æ–¥–æ–≥—Ä–µ–≤ –æ—Ç–∫–ª—é—á–µ–Ω —É " + sensor_1 + " –ø–æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã!*\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_0 + ": " + String(last_temp0, 2) + " ¬∞C\n";
        message += "üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É " + sensor_1 + ": " + String(last_temp1, 2) + " ¬∞C\n";
        bot.sendMessage(CHAT_ID, message, "Markdown");
    }
}